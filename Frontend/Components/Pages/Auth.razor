@page "/"
@inherits LayoutComponentBase

<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login - Cerâmica Canelas</title>
    <style>
        /* Seu CSS existente vai aqui. O deixei em branco para focar na funcionalidade. */
    </style>
</head>
<body>
    <div class="login-container">
        <div class="header">
            <div class="logo">
                <svg viewBox="0 0 100 100">
                    <rect x="10" y="60" width="80" height="30" fill="#e67e22" rx="3"/>
                    <rect x="20" y="40" width="60" height="25" fill="#d35400" rx="3"/>
                    <rect x="30" y="20" width="40" height="25" fill="#e67e22" rx="3"/>
                    <circle cx="50" cy="15" r="3" fill="#e67e22"/>
                </svg>
            </div>
            <div class="company-name">CERÂMICA CANELAS</div>
            <div class="company-subtitle">Sistema de Almoxarifado</div>
        </div>

        <div class="form-container">
            <div class="form-tabs">
                <button class="tab-button active" onclick="switchTab('login')">Login</button>
                <button class="tab-button" onclick="switchTab('recover')">Recuperar Senha</button>
            </div>

            <div id="alert" class="alert"></div>

            <div id="login" class="form-content active">
                <form onsubmit="handleLogin(event)">
                    <div class="form-group">
                        <label class="form-label">Email ou Usuário</label>
                        <input type="text" class="form-input" name="username" required>
                    </div>
                    <div class="form-group">
                        <label class="form-label">Senha</label>
                        <input type="password" class="form-input" name="password" required>
                    </div>
                    <button type="submit" class="form-button">Entrar</button>
                </form>
                <div class="forgot-password">
                    
                </div>
            </div>

            <div id="recover" class="form-content">
                <form onsubmit="handleRecover(event)">
                    <div class="form-group">
                        <label class="form-label">Email</label>
                        <input type="email" class="form-input" name="email" required>
                        <small style="color: #666; font-size: 12px; margin-top: 5px; display: block;">
                            Digite o email associado à sua conta para receber as instruções de recuperação.
                        </small>
                    </div>
                    <button type="submit" class="form-button">Enviar Instruções</button>
                </form>
                <div class="forgot-password">
                    <a href="#" onclick="switchTab('login')">Voltar ao Login</a>
                </div>
            </div>
        </div>
    </div>

    <script>
        function switchTab(tabName) {
            document.querySelectorAll('.tab-button').forEach(tab => tab.classList.remove('active'));
            document.querySelectorAll('.form-content').forEach(content => content.classList.remove('active'));
            
            document.querySelector(`[onclick="switchTab('${tabName}')"]`).classList.add('active');
            document.getElementById(tabName).classList.add('active');
            
            hideAlert();
        }

        function showAlert(message, type = 'success') {
            const alert = document.getElementById('alert');
            alert.textContent = message;
            alert.className = `alert ${type} show`;
            
            setTimeout(() => {
                hideAlert();
            }, 5000);
        }

        function hideAlert() {
            const alert = document.getElementById('alert');
            alert.classList.remove('show');
        }

        // --- FUNÇÃO DE LOGIN MODIFICADA ---
        async function handleLogin(event) {
            event.preventDefault(); // Impede o recarregamento da página pelo formulário
            hideAlert(); // Oculta alertas anteriores

            const form = event.target;
            const formData = new FormData(form);
            const username = formData.get('username');
            const password = formData.get('password');

            // A URL do seu endpoint da API
            const apiUrl = 'http://localhost:5087/api/auth';

            // Mostra um estado de carregamento no botão para melhor experiência do usuário
            const submitButton = form.querySelector('button[type="submit"]');
            submitButton.textContent = 'Entrando...';
            submitButton.disabled = true;

            try {
                const response = await fetch(apiUrl, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    // O backend espera um objeto JSON, então convertemos as credenciais
                    body: JSON.stringify({
                        username: username, // ou email, dependendo da sua API
                        password: password
                    })
                });

                if (response.ok) { // Código de status 200-299 indica sucesso
                    // Supondo que a API retorne um token, você pode salvá-lo aqui
                    // const result = await response.json();
                    // localStorage.setItem('authToken', result.token);

                    showAlert('Login realizado com sucesso! Redirecionando...', 'success');
                    
                    // Aguarda 2 segundos e redireciona para a página /home
                    setTimeout(() => {
                        window.location.href = '/home'; 
                    }, 2000);

                } else {
                    // Trata erros de login (ex: 401 não autorizado, 400 requisição inválida)
                    const errorData = await response.json();
                    const errorMessage = errorData.message || 'Usuário ou senha inválidos.';
                    showAlert(errorMessage, 'error');
                }

            } catch (error) {
                // Trata erros de rede (ex: API fora do ar)
                console.error('Falha na requisição de login:', error);
                showAlert('Não foi possível conectar ao servidor. Tente novamente mais tarde.', 'error');
            } finally {
                // Restaura o botão ao seu estado original, independentemente do resultado
                submitButton.textContent = 'Entrar';
                submitButton.disabled = false;
            }
        }

        function handleRecover(event) {
            event.preventDefault();
            const formData = new FormData(event.target);
            const email = formData.get('email');
            
            if (email) {
                showAlert('Instruções enviadas para seu email!', 'success');
                setTimeout(() => {
                    switchTab('login');
                }, 3000);
            }
        }
        
        // Outras funções de ajuda como 'handleRegister' e 'checkPasswordStrength'
        // foram omitidas pois não estavam no seu código inicial, mas podem ser adicionadas aqui se necessário.

    </script>
</body>
</html>