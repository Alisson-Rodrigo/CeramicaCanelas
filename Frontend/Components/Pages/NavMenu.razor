<button class="hamburger" id="hamburgerBtn">
    <span></span>
    <span></span>
    <span></span>
</button>

<div class="overlay" id="overlay"></div>

<div class="sidebar" id="sidebar">
    <div class="logo-container">
        <div class="logo">
            <img src="images/Logo.png" alt="Logo" />
        </div>
        <div class="company-name">CERÂMICA CANELAS</div>
    </div>

    <div class="menu">
        <div class="menu-section" id="almoxarifado-section" style="display: none;">
            <div class="menu-title expandable" onclick="toggleSubmenu(this)">
                <svg class="expand-icon" viewBox="0 0 24 24">
                    <path d="M7,10L12,15L17,10H7Z" />
                </svg>
                <span>Almoxarifado</span>
            </div>

            <div class="submenu-container expanded" id="almoxarifado-submenu">
                <div class="menu-subsection">
                    <div class="menu-subtitle">Dashboards</div>
                    <a href="#" class="menu-item" onclick="event.preventDefault(); loadForm('inicio'); setActive(this); closeMobileMenu();">
                        <svg class="menu-icon" viewBox="0 0 24 24"><path d="M10 20V14H14V20H19V12H22L12 3L2 12H5V20H10Z" /></svg>
                        <span class="menu-text">Início</span>
                    </a>
                    <a href="#" class="menu-item" onclick="event.preventDefault(); loadForm('categoriadash'); setActive(this); closeMobileMenu();">
                        <svg class="menu-icon" viewBox="0 0 24 24"><path d="M3 13H15V11H3M3 6V8H21V6M3 18H9V16H3V18Z" /></svg>
                        <span class="menu-text">Gastos por categorias</span>
                    </a>
                    <a href="#" class="menu-item" onclick="event.preventDefault(); loadForm('produtosndevolvidos'); setActive(this); closeMobileMenu();">
                        <svg class="menu-icon" viewBox="0 0 24 24"><path d="M12 2C13.1 2 14 2.9 14 4C14 5.1 13.1 6 12 6C10.9 6 10 5.1 10 4C10 2.9 10.9 2 12 2M13 14.9V22H11V14.9C8.7 14.4 7 12.4 7 10V8H17V10C17 12.4 15.3 14.4 13 14.9M12 8.5C11.2 8.5 10.5 9.2 10.5 10S11.2 11.5 12 11.5 13.5 10.8 13.5 10 12.8 8.5 12 8.5M8.5 18L7 16.5L8.5 15L10 16.5L8.5 18Z" /></svg>
                        <span class="menu-text">Produtos não devolvidos</span>
                    </a>
                    <a href="#" class="menu-item" onclick="event.preventDefault(); loadForm('produtosemfalta'); setActive(this); closeMobileMenu();">
                        <svg class="menu-icon" viewBox="0 0 24 24"><path d="M12 2C13.1 2 14 2.9 14 4C14 5.1 13.1 6 12 6C10.9 6 10 5.1 10 4C10 2.9 10.9 2 12 2M13 14.9V22H11V14.9C8.7 14.4 7 12.4 7 10V8H17V10C17 12.4 15.3 14.4 13 14.9M18 17V15H20V17H22V19H20V21H18V19H16V17H18Z" /></svg>
                        <span class="menu-text">Produtos em falta</span>
                    </a>
                    <a href="#" class="menu-item" onclick="event.preventDefault(); loadForm('saidasrecorrentes'); setActive(this); closeMobileMenu();">
                        <svg class="menu-icon" viewBox="0 0 24 24"><path d="M16 2V4H20.5L16 8H18L22 4V8.5H24V2M12 4C13.1 4 14 4.9 14 6C14 7.1 13.1 8 12 8C10.9 8 10 7.1 10 6C10 4.9 10.9 4 12 4M13 16.9V24H11V16.9C8.7 16.4 7 14.4 7 12V10H17V12C17 14.4 15.3 16.4 13 16.9Z" /></svg>
                        <span class="menu-text">Saidas Recorrentes</span>
                    </a>
                    <a href="#" class="menu-item" onclick="event.preventDefault(); loadForm('retiradasfuncionarios'); setActive(this); closeMobileMenu();">
                        <svg class="menu-icon" viewBox="0 0 24 24"><path d="M16 2V4H20.5L16 8H18L22 4V8.5H24V2M12 4C13.1 4 14 4.9 14 6C14 7.1 13.1 8 12 8C10.9 8 10 7.1 10 6C10 4.9 10.9 4 12 4M13 16.9V24H11V16.9C8.7 16.4 7 14.4 7 12V10H17V12C17 14.4 15.3 16.4 13 16.9Z" /></svg>
                        <span class="menu-text">Retiradas por funcionarios</span>
                    </a>
                </div>

                <div class="menu-subsection">
                    <div class="menu-subtitle">Cadastro</div>
                    <a href="#" class="menu-item" onclick="event.preventDefault(); loadForm('product'); setActive(this); closeMobileMenu();">
                        <svg class="menu-icon" viewBox="0 0 24 24"><path d="M12 2C13.1 2 14 2.9 14 4C14 5.1 13.1 6 12 6C10.9 6 10 5.1 10 4C10 2.9 10.9 2 12 2M13 14.9V22H11V14.9C8.7 14.4 7 12.4 7 10V8H17V10C17 12.4 15.3 14.4 13 14.9Z" /></svg>
                        <span class="menu-text">Produtos</span>
                    </a>
                    <a href="#" class="menu-item" onclick="event.preventDefault(); loadForm('employees'); setActive(this); closeMobileMenu();">
                        <svg class="menu-icon" viewBox="0 0 24 24"><path d="M12 4A4 4 0 0 1 16 8A4 4 0 0 1 12 12A4 4 0 0 1 8 8A4 4 0 0 1 12 4M12 14C16.42 14 20 15.79 20 18V20H4V18C4 15.79 7.58 14 12 14Z" /></svg>
                        <span class="menu-text">Funcionários</span>
                    </a>
                    <a href="#" class="menu-item" onclick="event.preventDefault(); loadForm('category'); setActive(this); closeMobileMenu();">
                        <svg class="menu-icon" viewBox="0 0 24 24"><path d="M4 6H6V8H4V6M4 10H6V12H4V10M4 14H6V16H4V14M8 6H20V4H8V6M8 8V10H20V8H8M8 12V14H20V12H8M8 16V18H20V16H8Z" /></svg>
                        <span class="menu-text">Categorias</span>
                    </a>
                    <a href="#" class="menu-item" onclick="event.preventDefault(); loadForm('suppliers'); setActive(this); closeMobileMenu();">
                        <svg class="menu-icon" viewBox="0 0 24 24"><path d="M20 8L17 4H11V12H2V7H4V4H2A2 2 0 0 0 0 6V17A2 2 0 0 0 2 19H3A3 3 0 0 0 6 22A3 3 0 0 0 9 19H15A3 3 0 0 0 18 22A3 3 0 0 0 21 19H22V12H24V10L20 8M7.5 19A1.5 1.5 0 1 1 6 17.5A1.5 1.5 0 0 1 7.5 19M13 9H16L18.5 12H13V9M19.5 19A1.5 1.5 0 1 1 18 17.5A1.5 1.5 0 0 1 19.5 19Z" /></svg>
                        <span class="menu-text">Fornecedores</span>
                    </a>
                </div>

                <div class="menu-subsection">
                    <div class="menu-subtitle">Movimentação de Produtos</div>
                    <a href="#" class="menu-item" onclick="event.preventDefault(); loadForm('entrada'); setActive(this); closeMobileMenu();">
                        <svg class="menu-icon" viewBox="0 0 24 24"><path d="M9 16.17L4.83 12L3.41 13.41L9 19L21 7L19.59 5.59L9 16.17Z" /></svg>
                        <span class="menu-text">Entrada de Produtos</span>
                    </a>
                    <a href="#" class="menu-item" onclick="event.preventDefault(); loadForm('saida'); setActive(this); closeMobileMenu();">
                        <svg class="menu-icon" viewBox="0 0 24 24"><path d="M16 13V11H8V8L3 12L8 16V13H16M20 3H12V5H20V19H12V21H20A2 2 0 0 0 22 19V5A2 2 0 0 0 20 3Z" /></svg>
                        <span class="menu-text">Saída de Produtos</span>
                    </a>
                    <a href="#" class="menu-item" onclick="event.preventDefault(); loadForm('devolucao'); setActive(this); closeMobileMenu();">
                        <svg class="menu-icon" viewBox="0 0 24 24"><path d="M7.5 5.6L5 7L6.4 8.5L8.9 7.1L7.5 5.6M19 12.5V10.5H21V12.5H19M12 2L13.09 6.26L16.5 5L15.24 8.26L19 9.5L15.24 10.74L16.5 14L13.09 12.74L12 17L10.91 12.74L7.5 14L8.76 10.74L5 9.5L8.76 8.26L7.5 5L10.91 6.26L12 2Z" /></svg>
                        <span class="menu-text">Devolução de Produtos</span>
                    </a>
                </div>
            </div>
        </div>

        <div class="menu-section" id="financeiro-section" style="display: none;">
          <div class="menu-title expandable" onclick="toggleSubmenu(this)">
            <svg class="expand-icon" viewBox="0 0 24 24">
              <path d="M7,10L12,15L17,10H7Z" />
            </svg>
            <span>Financeiro</span>
          </div>
  
          <div class="submenu-container expanded" id="financeiro-submenu">
            <div class="menu-subsection">
              <div class="menu-subtitle">Relatórios</div>
              <a href="#" class="menu-item" onclick="event.preventDefault(); loadForm('fluxo-caixa'); setActive(this); closeMobileMenu();">
                <svg class="menu-icon" viewBox="0 0 24 24"><path d="M3,16H10V14H3M3,12H13V10H3M3,8H13V6H3M15,10V6H17V10H15M19,10V6H21V10H19M15,14V12H17V14H15M19,14V12H21V14H19M15,18V16H17V18H15M19,18V16H21V18H19M15,22V20H17V22H15M19,22V20H21V22H19Z" /></svg>
                <span class="menu-text">Fluxo de Caixa</span>
              </a>
              <a href="#" class="menu-item" onclick="event.preventDefault(); loadForm('contas-pagar'); setActive(this); closeMobileMenu();">
                <svg class="menu-icon" viewBox="0 0 24 24"><path d="M11,3L12,2L13,3H15A1,1 0 0,1 16,4V6H8V4A1,1 0 0,1 9,3H11M19,18H5V8H19V18M11,10H13V12H11V10M11,14H13V16H11V14M5,20H19A2,2 0 0,0 21,18V8A2,2 0 0,0 19,6H17V4A2,2 0 0,0 15,2H9A2,2 0 0,0 7,4V6H5A2,2 0 0,0 3,8V18A2,2 0 0,0 5,20Z" /></svg>
                <span class="menu-text">Contas a Pagar</span>
              </a>
               <a href="#" class="menu-item" onclick="event.preventDefault(); loadForm('contas-receber'); setActive(this); closeMobileMenu();">
                <svg class="menu-icon" viewBox="0 0 24 24"><path d="M14,10H16V12H14V10M14,14H16V16H14V14M10,10H12V12H10V10M10,14H12V16H10V14M20,6H18V4A2,2 0 0,0 16,2H8A2,2 0 0,0 6,4V6H4A2,2 0 0,0 2,8V20A2,2 0 0,0 4,22H20A2,2 0 0,0 22,20V8A2,2 0 0,0 20,6M20,20H4V8H20V20Z" /></svg>
                <span class="menu-text">Contas a Receber</span>
              </a>
            </div>
          </div>
        </div>
        <div class="menu-section logout-section">
            <a href="#" class="menu-item admin-only" id="userSystemMenu" onclick="event.preventDefault(); loadForm('usersys'); setActive(this); closeMobileMenu();" style="display: none;">
                <svg class="menu-icon" viewBox="0 0 24 24"><path d="M12 1L3 5V11C3 16.55 6.84 21.74 12 23C17.16 21.74 21 16.55 21 11V5L12 1M12 7C13.1 7 14 7.9 14 9C14 10.1 13.1 11 12 11C10.9 11 10 10.1 10 9C10 7.9 10.9 7 12 7M12 13C13.37 13 15.14 13.5 16 14.38V11C16 9.67 12.33 9 12 9S8 9.67 8 11V14.38C8.86 13.5 10.63 13 12 13Z" /></svg>
                <span class="menu-text">Usuários do Sistema</span>
            </a>
            <a href="#" class="menu-item logout" onclick="logout(); closeMobileMenu();">
                <svg class="menu-icon" viewBox="0 0 24 24">
                    <path d="M16 13V11H8V8L3 12L8 16V13H16M20 3H12V5H20V19H12V21H20A2 2 0 0 0 22 19V5A2 2 0 0 0 20 3Z" />
                </svg>
                <span class="menu-text">Sair</span>
            </a>
        </div>
    </div>
</div>


<script>
    // FUNÇÃO PARA DECODIFICAR JWT TOKEN
    function parseJwt(token) {
        try {
            const base64Url = token.split('.')[1];
            const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
            const jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {
                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
            }).join(''));
            return JSON.parse(jsonPayload);
        } catch (error) {
            console.error('Erro ao decodificar token:', error);
            return null;
        }
    }

    // FUNÇÃO PARA VERIFICAR AS PERMISSÕES DO USUÁRIO
    function checkUserRole() {
        try {
            const token = localStorage.getItem('accessToken');
            console.log("Token encontrado:", token ? "SIM" : "NÃO");
            
            if (!token) {
                console.log("Nenhum token encontrado, usando modo demonstração");
                showMenusByRole(true, true, true); // Para demonstração, mostra tudo
                return;
            }

            const decodedToken = parseJwt(token);
            console.log("Token decodificado:", decodedToken);
            
            if (decodedToken && decodedToken.role) {
                const isAdmin = decodedToken.role === 'Admin';
                const isAlmoxarifado = decodedToken.role === 'Almoxarifado';
                const isFinancial = decodedToken.role === 'Financial'; // <-- Adicionado

                const hasAlmoxarifadoAccess = isAdmin || isAlmoxarifado;
                const hasFinancialAccess = isAdmin || isFinancial; // <-- Adicionado
                
                console.log(`=== INFORMAÇÕES DO USUÁRIO ===`);
                console.log(`Usuário: ${decodedToken.unique_name || 'Não definido'}`);
                console.log(`Email: ${decodedToken.email || 'Não definido'}`);
                console.log(`Role: ${decodedToken.role}`);
                console.log(`É Admin: ${isAdmin}`);
                console.log(`É Almoxarifado: ${isAlmoxarifado}`);
                console.log(`É Financeiro: ${isFinancial}`); // <-- Adicionado
                console.log(`Tem acesso ao Almoxarifado: ${hasAlmoxarifadoAccess}`);
                console.log(`Tem acesso ao Financeiro: ${hasFinancialAccess}`); // <-- Adicionado
                console.log(`=== FIM DAS INFORMAÇÕES ===`);
                
                // Controla a exibição dos menus baseado nas permissões
                showMenusByRole(isAdmin, hasAlmoxarifadoAccess, hasFinancialAccess); // <-- Atualizado
            } else {
                console.log("Token inválido ou sem role definida");
                console.log("Dados do token:", decodedToken);
                showMenusByRole(false, false, false); // <-- Atualizado
            }
        } catch (error) {
            console.error("Erro ao verificar role do usuário:", error);
            showMenusByRole(false, false, false); // <-- Atualizado
        }
    }

    // FUNÇÃO PARA MOSTRAR/OCULTAR MENUS BASEADO NA PERMISSÃO
    function showMenusByRole(isAdmin, hasAlmoxarifadoAccess, hasFinancialAccess) { // <-- Assinatura atualizada
        const userSystemMenu = document.getElementById('userSystemMenu');
        const almoxarifadoSection = document.getElementById('almoxarifado-section');
        const financeiroSection = document.getElementById('financeiro-section'); // <-- Adicionado

        console.log("=== CONTROLE DE MENUS ===");
        console.log(`Deve mostrar menu Admin: ${isAdmin}`);
        console.log(`Deve mostrar Almoxarifado: ${hasAlmoxarifadoAccess}`);
        console.log(`Deve mostrar Financeiro: ${hasFinancialAccess}`); // <-- Adicionado
        
        // Menu "Usuários do Sistema" - só para Admin
        if (userSystemMenu) {
            userSystemMenu.style.display = isAdmin ? 'flex' : 'none';
            console.log(`Menu Admin definido como: ${isAdmin ? 'VISÍVEL' : 'OCULTO'}`);
        }
        
        // Seção "Almoxarifado" - para Admin e Almoxarifado
        if (almoxarifadoSection) {
            almoxarifadoSection.style.display = hasAlmoxarifadoAccess ? 'block' : 'none';
            console.log(`Seção Almoxarifado definida como: ${hasAlmoxarifadoAccess ? 'VISÍVEL' : 'OCULTA'}`);
        }
        
        // Seção "Financeiro" - para Admin e Financial (NOVA LÓGICA)
        if (financeiroSection) {
            financeiroSection.style.display = hasFinancialAccess ? 'block' : 'none';
            console.log(`Seção Financeiro definida como: ${hasFinancialAccess ? 'VISÍVEL' : 'OCULTA'}`);
        }
        
        console.log("=== FIM CONTROLE DE MENUS ===");
    }

    // VERIFICAÇÃO DE TOKEN DE ACESSO
    function checkToken() {
        try {
            const token = localStorage.getItem('accessToken');
            if (!token) {
                console.log("Token não encontrado. Iniciando verificação de permissões (modo demo).");
                checkUserRole();
            } else {
                console.log("Token válido encontrado. Iniciando verificação de permissões.");
                checkUserRole();
            }
        } catch (error) {
            console.error("Erro na verificação do token:", error);
            showMenusByRole(false, false, false); // <-- Atualizado
        }
    }

    // FUNÇÕES DO MENU
    function setActive(element) {
        document.querySelectorAll(".menu-item").forEach((item) => {
            item.classList.remove("active");
        });
        element.classList.add("active");
    }

    function toggleSubmenu(element) {
        const submenu = element.nextElementSibling;
        const icon = element.querySelector(".expand-icon");
        submenu.classList.toggle("expanded");
        icon.classList.toggle("rotated");
    }

    // FUNÇÕES DE RESPONSIVIDADE
    function toggleMobileMenu() {
        const sidebar = document.getElementById('sidebar');
        const hamburger = document.getElementById('hamburgerBtn');
        const overlay = document.getElementById('overlay');

        sidebar.classList.toggle('active');
        hamburger.classList.toggle('active');
        overlay.classList.toggle('active');
    }

    function closeMobileMenu() {
        const sidebar = document.getElementById('sidebar');
        const hamburger = document.getElementById('hamburgerBtn');
        const overlay = document.getElementById('overlay');

        sidebar.classList.remove('active');
        hamburger.classList.remove('active');
        overlay.classList.remove('active');
    }

    function logout() {
        console.log("Fazendo logout...");
        localStorage.removeItem("accessToken");
        window.location.href = "/";
        alert("Logout realizado com sucesso! Redirecionando para a página inicial.");
    }

    // EVENT LISTENERS
    document.addEventListener("DOMContentLoaded", function () {
        // Inicializa a verificação de token e permissões
        checkToken();

        // Configura os submenus como expandidos por padrão
        document.querySelectorAll('.submenu-container').forEach(submenu => {
            submenu.classList.add('expanded');
        });
        document.querySelectorAll('.expand-icon').forEach(icon => {
            icon.classList.add('rotated');
        });

        // Event listeners para o menu hambúrguer
        const hamburger = document.getElementById('hamburgerBtn');
        const overlay = document.getElementById('overlay');

        if (hamburger) hamburger.addEventListener('click', toggleMobileMenu);
        if (overlay) overlay.addEventListener('click', closeMobileMenu);

        // Fecha o menu ao pressionar ESC
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                closeMobileMenu();
            }
        });

        // Fecha o menu ao redimensionar para desktop
        window.addEventListener('resize', function() {
            if (window.innerWidth > 768) {
                closeMobileMenu();
            }
        });

        // Define o primeiro item visível como ativo por padrão (após carregar os menus)
        setTimeout(() => {
            const firstVisibleMenuItem = document.querySelector('.menu-item:not([style*="display: none"])');
            if (firstVisibleMenuItem) {
                firstVisibleMenuItem.classList.add('active');
            }
        }, 100);
    });

</script>