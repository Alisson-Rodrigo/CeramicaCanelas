<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cadastro de Produtos</title>
    <style>

    </style>
</head>
<body>
    <div class="form-container">
        <div class="form-header">
            <h2>Cadastro de Produtos</h2>
            <p>Preencha os dados do produto abaixo</p>
        </div>

        <div class="form-content">
            <div class="success-message" id="successMessage">
                Produto cadastrado com sucesso!
            </div>
            
            <div class="error-message" id="errorMessage">
                Erro ao cadastrar produto. Verifique os dados informados.
            </div>

            <form id="productForm">
                <div class="form-grid">
                    <div class="form-group">
                        <label for="codigo">Código do Produto *</label>
                        <input type="text" id="codigo" name="codigo" required>
                    </div>

                    <div class="form-group">
                        <label for="nome">Nome do Produto *</label>
                        <input type="text" id="nome" name="nome" required>
                    </div>

                    <div class="form-group">
                        <label for="categoria">Categoria *</label>
                        <select id="categoria" name="categoria" required>
                            <option value="">Selecione uma categoria</option>
                            <option value="ceramica">Cerâmica</option>
                            <option value="tijolo">Tijolo</option>
                            <option value="telha">Telha</option>
                            <option value="laje">Laje</option>
                            <option value="bloco">Bloco</option>
                            <option value="outros">Outros</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label for="unidade">Unidade de Medida *</label>
                        <select id="unidade" name="unidade" required>
                            <option value="">Selecione a unidade</option>
                            <option value="UN">Unidade</option>
                            <option value="M2">Metro Quadrado</option>
                            <option value="M3">Metro Cúbico</option>
                            <option value="PC">Peça</option>
                            <option value="CX">Caixa</option>
                            <option value="PCT">Pacote</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label for="preco">Preço Unitário</label>
                        <input type="number" id="preco" name="preco" step="0.01" min="0" placeholder="0,00">
                    </div>

                    <div class="form-group">
                        <label for="estoqueMinimo">Estoque Mínimo</label>
                        <input type="number" id="estoqueMinimo" name="estoqueMinimo" min="0" placeholder="0">
                    </div>

                    <div class="form-group">
                        <label for="estoqueAtual">Estoque Atual</label>
                        <input type="number" id="estoqueAtual" name="estoqueAtual" min="0" placeholder="0">
                    </div>

                    <div class="form-group">
                        <label for="fornecedor">Fornecedor</label>
                        <input type="text" id="fornecedor" name="fornecedor" placeholder="Nome do fornecedor">
                    </div>

                    <div class="form-group full-width">
                        <label for="descricao">Descrição</label>
                        <textarea id="descricao" name="descricao" placeholder="Descrição detalhada do produto"></textarea>
                    </div>

                    <div class="form-group full-width">
                        <label for="observacoes">Observações</label>
                        <textarea id="observacoes" name="observacoes" placeholder="Observações adicionais"></textarea>
                    </div>
                </div>

                <div class="form-actions">
                    <button type="submit" class="btn btn-primary">Cadastrar Produto</button>
                    <button type="button" class="btn btn-secondary" onclick="limparFormulario()">Limpar</button>
                </div>
            </form>
        </div>
    </div>

    <script>
        // Função para limpar formulário
        function limparFormulario() {
            document.getElementById('productForm').reset();
            hideMessages();
        }

        // Função para esconder mensagens
        function hideMessages() {
            document.getElementById('successMessage').style.display = 'none';
            document.getElementById('errorMessage').style.display = 'none';
        }

        // Função para mostrar mensagem de sucesso
        function showSuccessMessage(message = 'Produto cadastrado com sucesso!') {
            hideMessages();
            const successDiv = document.getElementById('successMessage');
            successDiv.textContent = message;
            successDiv.style.display = 'block';
            
            // Scroll para o topo do formulário
            document.querySelector('.form-container').scrollIntoView({ behavior: 'smooth' });
        }

        // Função para mostrar mensagem de erro
        function showErrorMessage(message = 'Erro ao cadastrar produto. Verifique os dados informados.') {
            hideMessages();
            const errorDiv = document.getElementById('errorMessage');
            errorDiv.textContent = message;
            errorDiv.style.display = 'block';
            
            // Scroll para o topo do formulário
            document.querySelector('.form-container').scrollIntoView({ behavior: 'smooth' });
        }

        // Função para coletar dados do formulário
        function coletarDadosFormulario() {
            const formData = new FormData(document.getElementById('productForm'));
            const dados = {};
            
            for (let [key, value] = of formData.entries()) {
                dados[key] = value;
            }
            
            return dados;
        }

        // Função para validar formulário
        function validarFormulario(dados) {
            const erros = [];
            
            if (!dados.codigo || dados.codigo.trim() === '') {
                erros.push('Código do produto é obrigatório');
            }
            
            if (!dados.nome || dados.nome.trim() === '') {
                erros.push('Nome do produto é obrigatório');
            }
            
            if (!dados.categoria || dados.categoria.trim() === '') {
                erros.push('Categoria é obrigatória');
            }
            
            if (!dados.unidade || dados.unidade.trim() === '') {
                erros.push('Unidade de medida é obrigatória');
            }
            
            return erros;
        }

        // Função principal para cadastrar produto
        async function cadastrarProduto(dados) {
            try {
                // Aqui você pode implementar a chamada para sua API
                // Por exemplo, usando fetch para chamar um endpoint do Blazor
                
                const response = await fetch('/api/produtos', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(dados)
                });
                
                if (response.ok) {
                    const resultado = await response.json();
                    showSuccessMessage(`Produto "${dados.nome}" cadastrado com sucesso!`);
                    limparFormulario();
                    return true;
                } else {
                    throw new Error('Erro na resposta do servidor');
                }
            } catch (error) {
                console.error('Erro ao cadastrar produto:', error);
                showErrorMessage('Erro ao cadastrar produto. Tente novamente.');
                return false;
            }
        }

        // Event listener para o formulário
        document.getElementById('productForm').addEventListener('submit', async function(event) {
            event.preventDefault();
            
            const dados = coletarDadosFormulario();
            const erros = validarFormulario(dados);
            
            if (erros.length > 0) {
                showErrorMessage(erros.join(', '));
                return;
            }
            
            // Desabilitar botão durante o envio
            const submitBtn = document.querySelector('button[type="submit"]');
            const originalText = submitBtn.textContent;
            submitBtn.disabled = true;
            submitBtn.textContent = 'Cadastrando...';
            
            try {
                await cadastrarProduto(dados);
            } finally {
                // Reabilitar botão
                submitBtn.disabled = false;
                submitBtn.textContent = originalText;
            }
        });

        // Máscara para preço
        document.getElementById('preco').addEventListener('input', function(e) {
            let value = e.target.value;
            value = value.replace(/[^\d.,]/g, '');
            e.target.value = value;
        });

        // Auto-gerar código se não preenchido
        document.getElementById('nome').addEventListener('blur', function(e) {
            const codigoInput = document.getElementById('codigo');
            if (!codigoInput.value && e.target.value) {
                const codigo = e.target.value.substring(0, 3).toUpperCase() + Date.now().toString().slice(-4);
                codigoInput.value = codigo;
            }
        });
    </script>
</body>
</html>